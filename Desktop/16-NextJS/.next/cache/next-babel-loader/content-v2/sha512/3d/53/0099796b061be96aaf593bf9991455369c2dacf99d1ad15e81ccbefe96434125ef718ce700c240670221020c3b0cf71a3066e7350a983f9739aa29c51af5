{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\16-NextJS\\\\pages\\\\[meetupid]\\\\index.js\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst details = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetups.image,\n    title: props.meetups.title,\n    address: props.meetups.address,\n    description: props.meetups.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport default details;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://pankajkandpal24:1234@cluster0.l3uwaim.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollection = db.collection(\"meetups\");\n  const meetups = await meetupcollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupid: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const id = context.params.meetupid;\n  const client = await MongoClient.connect(\"mongodb+srv://pankajkandpal24:1234@cluster0.l3uwaim.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollection = db.collection(\"meetups\");\n  const meetup = await meetupcollection.findOne({\n    _id: new ObjectId(id)\n  });\n  return {\n    props: {\n      meetups: meetup\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/DELL/Desktop/16-NextJS/pages/[meetupid]/index.js"],"names":["React","MeetupDetail","MongoClient","ObjectId","details","props","meetups","image","title","address","description","getStaticPaths","client","connect","db","meetupcollection","collection","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupid","toString","getStaticProps","context","id","findOne"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,sBACE,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACC,OAAN,CAAcC,KADrB;AAEA,IAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcE,KAFrB;AAGA,IAAA,OAAO,EAAEH,KAAK,CAACC,OAAN,CAAcG,OAHvB;AAIA,IAAA,WAAW,EAAEJ,KAAK,CAACC,OAAN,CAAcI;AAJ3B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,eAAeN,OAAf;AAEA,OAAO,eAAeO,cAAf,GAA+B;AAEpC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMV,OAAO,GAAC,MAAMS,gBAAgB,CAACE,IAAjB,CAAsB,EAAtB,EAAyB;AAACC,IAAAA,GAAG,EAAC;AAAL,GAAzB,EAAkCC,OAAlC,EAApB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAM;AACJC,IAAAA,QAAQ,EAAC,KADL;AAEJC,IAAAA,KAAK,EAAEhB,OAAO,CAACiB,GAAR,CAAaC,MAAD,KAAW;AAC5BC,MAAAA,MAAM,EAAC;AACLC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADqB,KAAX,CAAZ;AAFH,GAAN;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAE3C,QAAMC,EAAE,GAACD,OAAO,CAACJ,MAAR,CAAeC,QAAxB;AAEA,QAAMd,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMQ,MAAM,GAAE,MAAMT,gBAAgB,CAACgB,OAAjB,CAAyB;AAACb,IAAAA,GAAG,EAAE,IAAIf,QAAJ,CAAa2B,EAAb;AAAN,GAAzB,CAApB;AAEF,SAAM;AACJzB,IAAAA,KAAK,EAAC;AACJC,MAAAA,OAAO,EAACkB;AADJ;AADF,GAAN;AAKC","sourcesContent":["import React from 'react'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\nimport { MongoClient, ObjectId } from 'mongodb'\r\n\r\nconst details = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n    image={props.meetups.image}\r\n    title={props.meetups.title}\r\n    address={props.meetups.address}\r\n    description={props.meetups.description}\r\n    />\r\n  )\r\n}\r\n\r\nexport default details\r\n\r\nexport async function getStaticPaths(){\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://pankajkandpal24:1234@cluster0.l3uwaim.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupcollection = db.collection(\"meetups\");\r\n\r\n  const meetups=await meetupcollection.find({},{_id:1}).toArray();\r\n\r\n  client.close();\r\n\r\n  return{\r\n    fallback:false,\r\n    paths: meetups.map((meetup)=>({\r\n      params:{\r\n        meetupid:meetup._id.toString(),\r\n      },\r\n    }))\r\n  }\r\n}\r\n\r\nexport async function getStaticProps(context){\r\n\r\n  const id=context.params.meetupid\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://pankajkandpal24:1234@cluster0.l3uwaim.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupcollection = db.collection(\"meetups\");\r\n\r\n  const meetup= await meetupcollection.findOne({_id: new ObjectId(id)})\r\n\r\nreturn{\r\n  props:{\r\n    meetups:meetup\r\n  }\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}